AWSTemplateFormatVersion: '2010-09-09'
Description: 'HIPAA-compliant audit logging infrastructure for Medical Image Sharing application'

Parameters:
  Environment:
    Type: String
    Default: production
    AllowedValues:
      - development
      - staging
      - production
    Description: Deployment environment

  RetentionPeriod:
    Type: Number
    Default: 2555  # 7 years in days
    Description: Retention period for logs in days (HIPAA requirement is 7 years)

  ApplicationName:
    Type: String
    Default: medical-image-sharing
    Description: Name of the application for resource naming

Resources:
  # S3 bucket for CloudTrail logs with appropriate encryption and retention
  CloudTrailBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      BucketName: !Sub '${ApplicationName}-cloudtrail-logs-${AWS::AccountId}'
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      LifecycleConfiguration:
        Rules:
          - Id: RetentionRule
            Status: Enabled
            ExpirationInDays: !Ref RetentionPeriod
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  # S3 bucket policy to allow CloudTrail to write logs
  CloudTrailBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref CloudTrailBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: AWSCloudTrailAclCheck
            Effect: Allow
            Principal:
              Service: cloudtrail.amazonaws.com
            Action: s3:GetBucketAcl
            Resource: !Sub 'arn:aws:s3:::${CloudTrailBucket}'
          - Sid: AWSCloudTrailWrite
            Effect: Allow
            Principal:
              Service: cloudtrail.amazonaws.com
            Action: s3:PutObject
            Resource: !Sub 'arn:aws:s3:::${CloudTrailBucket}/AWSLogs/${AWS::AccountId}/*'
            Condition:
              StringEquals:
                s3:x-amz-acl: bucket-owner-full-control

  # CloudWatch Log Group for CloudTrail
  CloudTrailLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/${ApplicationName}/cloudtrail/logs'
      RetentionInDays: !Ref RetentionPeriod

  # IAM Role for CloudTrail to CloudWatch Logs
  CloudTrailToCloudWatchLogsRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: cloudtrail.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/CloudWatchLogsFullAccess
      Policies:
        - PolicyName: CloudTrailToCloudWatchLogs
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !GetAtt CloudTrailLogGroup.Arn

  # CloudWatch Log Group for Application Audit Logs
  AppAuditLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/${ApplicationName}/audit-logs'
      RetentionInDays: !Ref RetentionPeriod

  # CloudTrail Trail with integration to CloudWatch Logs
  CloudTrail:
    Type: AWS::CloudTrail::Trail
    DependsOn:
      - CloudTrailBucketPolicy
    Properties:
      TrailName: !Sub '${ApplicationName}-hipaa-trail'
      S3BucketName: !Ref CloudTrailBucket
      IsLogging: true
      EnableLogFileValidation: true
      IncludeGlobalServiceEvents: true
      IsMultiRegionTrail: true
      CloudWatchLogsLogGroupArn: !GetAtt CloudTrailLogGroup.Arn
      CloudWatchLogsRoleArn: !GetAtt CloudTrailToCloudWatchLogsRole.Arn
      Tags:
        - Key: Application
          Value: !Ref ApplicationName
        - Key: Environment
          Value: !Ref Environment
        - Key: Compliance
          Value: HIPAA

  # EventBridge Event Bus for Application Events
  ApplicationEventBus:
    Type: AWS::Events::EventBus
    Properties:
      Name: !Sub '${ApplicationName}-events'

  # CloudWatch Alarms for security monitoring
  FailedLoginAttemptsAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub '${ApplicationName}-failed-login-attempts'
      AlarmDescription: 'Alert on multiple failed login attempts'
      MetricName: LoginFailureCount
      Namespace: !Sub '${ApplicationName}/Security'
      Statistic: Sum
      Period: 300
      EvaluationPeriods: 1
      Threshold: 5
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: notBreaching

  # SNS Topic for security alerts
  SecurityAlertsTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub '${ApplicationName}-security-alerts'
      DisplayName: 'Security Alerts'

  # IAM Role for EventBridge to send events to CloudTrail
  EventBridgeToCloudTrailRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: events.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/CloudTrailFullAccess

  # IAM Role for application to push logs to CloudWatch
  ApplicationLoggingRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/CloudWatchLogsFullAccess
      Policies:
        - PolicyName: EventBridgePutEvents
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - events:PutEvents
                Resource: !GetAtt ApplicationEventBus.Arn

Outputs:
  CloudTrailBucketName:
    Description: Name of the S3 bucket where CloudTrail logs are stored
    Value: !Ref CloudTrailBucket

  CloudTrailLogGroupArn:
    Description: ARN of the CloudWatch Logs group for CloudTrail
    Value: !GetAtt CloudTrailLogGroup.Arn

  AppAuditLogGroupArn:
    Description: ARN of the CloudWatch Logs group for application audit logs
    Value: !GetAtt AppAuditLogGroup.Arn

  ApplicationEventBusArn:
    Description: ARN of the EventBridge event bus for application events
    Value: !GetAtt ApplicationEventBus.Arn

  ApplicationLoggingRoleArn:
    Description: ARN of the IAM role for application logging
    Value: !GetAtt ApplicationLoggingRole.Arn

  SecurityAlertsTopicArn:
    Description: ARN of the SNS topic for security alerts
    Value: !Ref SecurityAlertsTopic 